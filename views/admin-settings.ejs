<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ตั้งค่าระบบ - Admin Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <style>
        .settings-card {
            border: 1px solid #e0e0e0;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }
        .settings-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 10px 10px 0 0;
        }
        .settings-body {
            padding: 25px;
        }
        .form-control, .form-select {
            border-radius: 8px;
            border: 2px solid #e0e0e0;
            transition: all 0.3s ease;
        }
        .form-control:focus, .form-select:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }
        .btn-save {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            border-radius: 8px;
            padding: 12px 30px;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        .btn-save:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }
        .setting-item {
            margin-bottom: 25px;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 8px;
            border-left: 4px solid #667eea;
        }
        .setting-label {
            font-weight: 600;
            color: #495057;
            margin-bottom: 8px;
        }
        .setting-description {
            color: #6c757d;
            font-size: 0.9em;
            margin-bottom: 15px;
        }
        .alert-custom {
            border-radius: 8px;
            border: none;
            padding: 15px 20px;
        }
        .nav-tabs .nav-link {
            border-radius: 8px 8px 0 0;
            border: none;
            color: #6c757d;
            font-weight: 500;
        }
        .nav-tabs .nav-link.active {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
        }
        .back-button {
            background: #6c757d;
            border: none;
            border-radius: 8px;
            padding: 10px 20px;
            color: white;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
        }
        .back-button:hover {
            background: #5a6268;
            color: white;
            text-decoration: none;
            transform: translateX(-2px);
        }
        
        /* Minimal Design Styles */
        .nav-tabs-minimal {
            display: flex;
            gap: 1px;
            background: #f8f9fa;
            border-radius: 8px;
            padding: 4px;
        }
        
        .nav-tab-minimal {
            flex: 1;
            border: none;
            background: transparent;
            padding: 12px 16px;
            border-radius: 6px;
            font-weight: 500;
            color: #6c757d;
            transition: all 0.2s ease;
        }
        
        .nav-tab-minimal.active {
            background: white;
            color: #495057;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .nav-tab-minimal:hover:not(.active) {
            background: rgba(255,255,255,0.5);
            color: #495057;
        }
        
        .overview-minimal {
            max-width: 800px;
            margin: 0 auto;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }
        
        .stat-item {
            text-align: center;
            padding: 20px;
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        }
        
        .stat-number {
            display: block;
            font-size: 2rem;
            font-weight: 700;
            color: #495057;
            margin-bottom: 8px;
        }
        
        .stat-label {
            color: #6c757d;
            font-size: 0.9rem;
        }
        
        .quick-actions h3 {
            color: #495057;
            margin-bottom: 20px;
            font-weight: 600;
        }
        
        .action-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 16px;
        }
        
        .action-item {
            display: block;
            padding: 20px;
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
            text-decoration: none;
            color: inherit;
            transition: all 0.2s ease;
        }
        
        .action-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 16px rgba(0,0,0,0.12);
            text-decoration: none;
            color: inherit;
        }
        
        .action-title {
            display: block;
            font-weight: 600;
            color: #495057;
            margin-bottom: 8px;
        }
        
        .action-desc {
            color: #6c757d;
            font-size: 0.9rem;
        }
        
        .stats-minimal {
            display: flex;
            gap: 20px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }
        
        .stat-minimal {
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 16px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 1px 4px rgba(0,0,0,0.1);
            min-width: 100px;
        }
        
        .action-buttons {
            display: flex;
            gap: 12px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }
        
        .btn-minimal {
            padding: 10px 20px;
            border: none;
            border-radius: 6px;
            font-weight: 500;
            text-decoration: none;
            transition: all 0.2s ease;
            cursor: pointer;
        }
        
        .btn-minimal.primary {
            background: #007bff;
            color: white;
        }
        
        .btn-minimal.primary:hover {
            background: #0056b3;
            transform: translateY(-1px);
        }
        
        .btn-minimal.secondary {
            background: #f8f9fa;
            color: #495057;
            border: 1px solid #dee2e6;
        }
        
        .btn-minimal.secondary:hover {
            background: #e9ecef;
            transform: translateY(-1px);
        }
        
        .ai-settings-minimal {
            background: white;
            padding: 24px;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        }
        
        .ai-settings-minimal h4 {
            color: #495057;
            margin-bottom: 20px;
            font-weight: 600;
        }
        
        .form-row-minimal {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }
        
        .form-group-minimal {
            display: flex;
            flex-direction: column;
        }
        
        .form-group-minimal label {
            font-weight: 500;
            color: #495057;
            margin-bottom: 8px;
        }
        
        .form-control-minimal {
            padding: 10px 12px;
            border: 1px solid #dee2e6;
            border-radius: 6px;
            font-size: 0.9rem;
            transition: border-color 0.2s ease;
        }
        
        .form-control-minimal:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 0 0 2px rgba(0,123,255,0.1);
        }
        
        .chat-settings-minimal {
            max-width: 600px;
            margin: 0 auto;
        }
        
        .chat-settings-minimal h3 {
            color: #495057;
            margin-bottom: 8px;
            font-weight: 600;
        }
        
        .chat-settings-minimal p {
            margin-bottom: 30px;
        }
        
        .checkbox-label {
            display: flex;
            align-items: center;
            gap: 12px;
            cursor: pointer;
            font-weight: 500;
            color: #495057;
        }
        
        .checkbox-label input[type="checkbox"] {
            width: 18px;
            height: 18px;
            accent-color: #007bff;
        }
        
        .info-box {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-top: 30px;
        }
        
        .info-box h4 {
            color: #495057;
            margin-bottom: 16px;
            font-weight: 600;
        }
        
        .info-box ul {
            margin: 0;
            padding-left: 20px;
        }
        
        .info-box li {
            color: #6c757d;
            margin-bottom: 8px;
        }
        
        .system-settings-minimal {
            max-width: 500px;
            margin: 0 auto;
        }
        
        .system-settings-minimal h3 {
            color: #495057;
            margin-bottom: 8px;
            font-weight: 600;
        }
        
        .system-settings-minimal p {
            margin-bottom: 30px;
        }
        
        .system-settings-minimal .form-group-minimal {
            margin-bottom: 20px;
        }
        
        .security-settings-minimal {
            max-width: 800px;
            margin: 0 auto;
        }
        
        .security-settings-minimal h3 {
            color: #495057;
            margin-bottom: 8px;
            font-weight: 600;
        }
        
        .security-settings-minimal p {
            margin-bottom: 30px;
        }
        
        .security-overview {
            display: flex;
            gap: 20px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }
        
        .security-item {
            flex: 1;
            min-width: 150px;
            padding: 16px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 1px 4px rgba(0,0,0,0.1);
            text-align: center;
        }
        
        .security-count {
            font-size: 1.2rem;
            font-weight: 600;
            color: #495057;
        }
        
        .test-filter {
            display: flex;
            gap: 12px;
            align-items: flex-end;
        }
        
        .test-filter .form-control-minimal {
            flex: 1;
        }
        
        .test-filter .btn-minimal {
            white-space: nowrap;
        }
        
        /* Additional UI improvements */
        .card {
            transition: all 0.3s ease;
        }
        
        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }
        
        .dropdown-menu {
            border-radius: 8px;
            border: none;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }
        
        .dropdown-item:hover {
            background-color: #f8f9fa;
        }
        
        .badge {
            font-size: 0.75em;
        }
        
        .text-truncate {
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
        
        .btn-lg {
            padding: 12px 24px;
            font-size: 1.1rem;
        }
        
        .shadow-sm {
            box-shadow: 0 2px 8px rgba(0,0,0,0.1) !important;
        }
        
        .gap-2 {
            gap: 0.5rem !important;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <!-- Header -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center">
                    <h2 class="mb-0">
                        <i class="fas fa-cogs text-primary me-2"></i>
                        ตั้งค่าระบบ
                    </h2>
                    <a href="/admin/dashboard" class="back-button">
                        <i class="fas fa-arrow-left"></i>
                        กลับไปหน้าแอดมิน
                    </a>
                </div>
                <hr>
            </div>
        </div>

        <!-- Alert Messages -->
        <div id="alertContainer"></div>

        <!-- Settings Tabs -->
        <div class="nav-tabs-minimal mb-4" id="settingsTabs" role="tablist">
            <button class="nav-tab-minimal active" id="overview-tab" data-bs-toggle="tab" data-bs-target="#overview-settings" type="button" role="tab">
                ภาพรวม
            </button>
            <button class="nav-tab-minimal" id="line-ai-tab" data-bs-toggle="tab" data-bs-target="#line-ai-settings" type="button" role="tab">
                Line Bot & AI
            </button>
            <button class="nav-tab-minimal" id="chat-tab" data-bs-toggle="tab" data-bs-target="#chat-settings" type="button" role="tab">
                แชท
            </button>
            <button class="nav-tab-minimal" id="system-tab" data-bs-toggle="tab" data-bs-target="#system-settings" type="button" role="tab">
                ระบบ
            </button>
            <button class="nav-tab-minimal" id="filter-tab" data-bs-toggle="tab" data-bs-target="#filter-settings" type="button" role="tab">
                ความปลอดภัย
            </button>
        </div>

        <!-- Tab Content -->
        <div class="tab-content" id="settingsTabContent">
            <!-- Overview Tab -->
            <div class="tab-pane fade show active" id="overview-settings" role="tabpanel">
                <div class="row">
                    <div class="col-12">
                        <div class="settings-card">
                            <div class="settings-header">
                                <h4 class="mb-0">
                                    <i class="fas fa-tachometer-alt me-2"></i>
                                    ภาพรวมระบบ
                                </h4>
                                <p class="text-muted mb-0">
                                    ดูสถานะและสถิติการทำงานของระบบทั้งหมด
                                </p>
                            </div>
                            <div class="settings-body">
                                <!-- System Statistics -->
                                <div class="stats-grid">
                                    <div class="stat-item">
                                        <div class="stat-number" id="aiModelsCount">7</div>
                                        <div class="stat-label">AI Models</div>
                                    </div>
                                    <div class="stat-item">
                                        <div class="stat-number" id="lineBotsCount">0</div>
                                        <div class="stat-label">Line Bots</div>
                                    </div>
                                    <div class="stat-item">
                                        <div class="stat-number" id="instructionsCount">0</div>
                                        <div class="stat-label">Instructions</div>
                                    </div>
                                    <div class="stat-item">
                                        <div class="stat-number" id="securityStatus">เปิด</div>
                                        <div class="stat-label">ความปลอดภัย</div>
                                    </div>
                                </div>

                                <!-- Quick Actions -->
                                <div class="quick-actions">
                                    <h3>การทำงานหลัก</h3>
                                    <div class="action-grid">
                                        <a href="#line-ai-settings" class="action-item" data-bs-toggle="tab">
                                            <span class="action-title">Line Bot & AI</span>
                                            <span class="action-desc">จัดการ Line Bot และ AI Models</span>
                                        </a>
                                        <a href="#chat-settings" class="action-item" data-bs-toggle="tab">
                                            <span class="action-title">การแชท</span>
                                            <span class="action-desc">ตั้งค่าการทำงานของระบบแชท</span>
                                        </a>
                                        <a href="#system-settings" class="action-item" data-bs-toggle="tab">
                                            <span class="action-title">ระบบ</span>
                                            <span class="action-desc">ตั้งค่าระบบทั่วไปและการแจ้งเตือน</span>
                                        </a>
                                        <a href="#filter-settings" class="action-item" data-bs-toggle="tab">
                                            <span class="action-title">ความปลอดภัย</span>
                                            <span class="action-desc">ตั้งค่าการกรองข้อความและความปลอดภัย</span>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Chat Settings Tab -->
            <div class="tab-pane fade" id="chat-settings" role="tabpanel">
                <div class="chat-settings-minimal">
                    <h3>การตั้งค่าแชท</h3>
                    <p class="text-muted">ตั้งค่าการทำงานของระบบแชทและคิวข้อความ</p>
                    
                    <form id="chatSettingsForm">
                        <div class="form-row-minimal">
                            <div class="form-group-minimal">
                                <label>ระยะเวลาดีเลย์ (วินาที)</label>
                                <input type="number" class="form-control-minimal" id="chatDelaySeconds" 
                                       min="1" max="60" step="1" value="5">
                                <small>แนะนำ: 3-10 วินาที</small>
                            </div>
                            <div class="form-group-minimal">
                                <label>ข้อความสูงสุดในคิว</label>
                                <input type="number" class="form-control-minimal" id="maxQueueMessages" 
                                       min="1" max="20" step="1" value="10">
                                <small>แนะนำ: 5-15 ข้อความ</small>
                            </div>
                        </div>
                        
                        <div class="form-group-minimal">
                            <label class="checkbox-label">
                                <input type="checkbox" id="enableMessageMerging" checked>
                                <span>เปิดใช้งานการรวมข้อความ</span>
                            </label>
                        </div>
                        
                        <button type="submit" class="btn-minimal primary">
                            บันทึก
                        </button>
                    </form>
                    
                    <div class="info-box">
                        <h4>การทำงานของระบบคิว</h4>
                        <ul>
                            <li>ข้อความแรก: เริ่มนับเวลา delay</li>
                            <li>ข้อความเพิ่ม: รีเซ็ตตัวจับเวลา</li>
                            <li>ครบเวลา: ประมวลผลข้อความทั้งหมด</li>
                            <li>ครบจำนวน: ประมวลผลทันที</li>
                        </ul>
                    </div>
                </div>
            </div>



            <!-- System Settings Tab -->
            <div class="tab-pane fade" id="system-settings" role="tabpanel">
                <div class="system-settings-minimal">
                    <h3>การตั้งค่าระบบ</h3>
                    <p class="text-muted">ตั้งค่าระบบทั่วไปและการแจ้งเตือน</p>
                    
                    <form id="systemSettingsForm">
                        <div class="form-group-minimal">
                            <label class="checkbox-label">
                                <input type="checkbox" id="aiEnabled" checked>
                                <span>เปิดใช้งาน AI</span>
                            </label>
                        </div>
                        
                        <div class="form-group-minimal">
                            <label class="checkbox-label">
                                <input type="checkbox" id="enableChatHistory" checked>
                                <span>บันทึกประวัติแชท</span>
                            </label>
                        </div>
                        
                        <div class="form-group-minimal">
                            <label class="checkbox-label">
                                <input type="checkbox" id="enableAdminNotifications" checked>
                                <span>แจ้งเตือนแอดมิน</span>
                            </label>
                        </div>
                        
                        <div class="form-group-minimal">
                            <label>โหมดการทำงาน</label>
                            <select class="form-control-minimal" id="systemMode">
                                <option value="production">Production (ใช้งานจริง)</option>
                                <option value="development">Development (พัฒนา)</option>
                                <option value="maintenance">Maintenance (บำรุงรักษา)</option>
                            </select>
                        </div>
                        
                        <button type="submit" class="btn-minimal primary">
                            บันทึก
                        </button>
                    </form>
                </div>
            </div>

            <!-- Line Bot & AI Settings Tab -->
            <div class="tab-pane fade" id="line-ai-settings" role="tabpanel">
                <div class="row">
                    <div class="col-12">
                        <div class="settings-card">
                            <div class="settings-header">
                                <h4 class="mb-0">
                                    <i class="fab fa-line me-2"></i>
                                    Line Bot & AI Management
                                </h4>
                                <p class="text-muted mb-0">
                                    จัดการ Line Bot และตั้งค่า AI Models พร้อม Instructions สำหรับแต่ละ Bot
                                </p>
                            </div>
                            <div class="settings-body">
                                <!-- Quick Stats -->
                                <div class="stats-minimal">
                                    <div class="stat-minimal">
                                        <span class="stat-number" id="totalBots">0</span>
                                        <span class="stat-label">Line Bots</span>
                                    </div>
                                    <div class="stat-minimal">
                                        <span class="stat-number" id="activeBots">0</span>
                                        <span class="stat-label">ใช้งาน</span>
                                    </div>
                                    <div class="stat-minimal">
                                        <span class="stat-number" id="configuredBots">0</span>
                                        <span class="stat-label">ตั้งค่าแล้ว</span>
                                    </div>
                                    <div class="stat-minimal">
                                        <span class="stat-number" id="instructionsCount">0</span>
                                        <span class="stat-label">Instructions</span>
                                    </div>
                                </div>

                                <!-- Action Buttons -->
                                <div class="action-buttons">
                                    <button type="button" class="btn-minimal primary" data-bs-toggle="modal" data-bs-target="#addLineBotModal">
                                        เพิ่ม Line Bot
                                    </button>
                                    <button type="button" class="btn-minimal secondary" onclick="refreshLineBotList()">
                                        รีเฟรช
                                    </button>
                                    <a href="/admin/instructions" class="btn-minimal secondary">
                                        จัดการ Instructions
                                    </a>
                                </div>

                                <!-- Line Bot List -->
                                <div id="lineBotList">
                                    <!-- Line Bot items will be loaded here -->
                                </div>

                                <!-- Global AI Settings -->
                                <div class="ai-settings-minimal">
                                    <h4>การตั้งค่า AI หลัก</h4>
                                    <form id="aiSettingsForm">
                                        <div class="form-row-minimal">
                                            <div class="form-group-minimal">
                                                <label>โมเดลข้อความ</label>
                                                <select class="form-control-minimal" id="textModel">
                                                    <option value="gpt-5">GPT-5</option>
                                                    <option value="gpt-5-mini">GPT-5 Mini</option>
                                                    <option value="gpt-5-chat-latest">GPT-5 Chat Latest</option>
                                                    <option value="gpt-5-nano">GPT-5 Nano</option>
                                                    <option value="gpt-4.1">GPT-4.1</option>
                                                    <option value="gpt-4.1-mini">GPT-4.1 Mini</option>
                                                    <option value="o3">O3</option>
                                                </select>
                                            </div>
                                            <div class="form-group-minimal">
                                                <label>โมเดลรูปภาพ</label>
                                                <select class="form-control-minimal" id="visionModel">
                                                    <option value="gpt-5">GPT-5</option>
                                                    <option value="gpt-5-mini">GPT-5 Mini</option>
                                                    <option value="gpt-5-chat-latest">GPT-5 Chat Latest</option>
                                                    <option value="gpt-5-nano">GPT-5 Nano</option>
                                                    <option value="gpt-4.1">GPT-4.1</option>
                                                    <option value="gpt-4.1-mini">GPT-4.1 Mini</option>
                                                    <option value="o3">O3</option>
                                                </select>
                                            </div>
                                            <div class="form-group-minimal">
                                                <label>รูปภาพสูงสุด</label>
                                                <input type="number" class="form-control-minimal" id="maxImagesPerMessage" 
                                                       min="1" max="10" step="1" value="3">
                                            </div>
                                        </div>
                                        <button type="submit" class="btn-minimal primary">
                                            บันทึก
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Security Settings Tab -->
            <div class="tab-pane fade" id="filter-settings" role="tabpanel">
                <div class="security-settings-minimal">
                    <h3>ความปลอดภัย</h3>
                    <p class="text-muted">ตั้งค่าการกรองข้อความและระบบความปลอดภัย</p>
                    
                    <!-- Security Overview -->
                    <div class="security-overview">
                        <div class="security-item">
                            <label class="checkbox-label">
                                <input type="checkbox" id="enableMessageFiltering" checked>
                                <span>การกรองข้อความ</span>
                            </label>
                        </div>
                        <div class="security-item">
                            <label class="checkbox-label">
                                <input type="checkbox" id="enableStrictFiltering" checked>
                                <span>การกรองแบบละเอียด</span>
                            </label>
                        </div>
                        <div class="security-item">
                            <span class="security-count">
                                <span id="hiddenWordsCount">0</span> คำที่ซ่อน
                            </span>
                        </div>
                    </div>

                    <form id="filterSettingsForm">
                        <div class="form-row-minimal">
                            <div class="form-group-minimal">
                                <label>คำที่ต้องการซ่อน</label>
                                <textarea class="form-control-minimal" id="hiddenWords" rows="8" 
                                          placeholder="ตัวอย่าง:&#10;คำหยาบ&#10;ข้อมูลส่วนตัว&#10;ลิงก์ที่ไม่เหมาะสม"></textarea>
                                <small>หนึ่งคำต่อบรรทัด</small>
                            </div>
                            <div class="form-group-minimal">
                                <label>คำที่ต้องการแทนที่</label>
                                <textarea class="form-control-minimal" id="replacementWords" rows="8" 
                                          placeholder="ตัวอย่าง:&#10;***&#10;[ข้อมูลส่วนตัว]&#10;[ลิงก์]"></textarea>
                                <small>คำที่ใช้แทนที่คำที่ซ่อน</small>
                            </div>
                        </div>
                        
                        <div class="form-group-minimal">
                            <label>ทดสอบการกรอง</label>
                            <div class="test-filter">
                                <input type="text" class="form-control-minimal" id="testFilterInput" 
                                       placeholder="ใส่ข้อความเพื่อทดสอบการกรอง">
                                <button type="button" class="btn-minimal secondary" onclick="testFilter()">
                                    ทดสอบ
                                </button>
                            </div>
                        </div>
                        
                        <button type="submit" class="btn-minimal primary">
                            บันทึก
                        </button>
                    </form>
                </div>
            </div>
                                                <input type="text" class="form-control" id="replacementText" 
                                                       placeholder="[ข้อความถูกซ่อน]">
                                                <small class="text-muted">ถ้าไม่ใส่จะใช้ "[ข้อความถูกซ่อน]" เป็นค่าเริ่มต้น</small>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="setting-item">
                                        <div class="setting-label">ทดสอบการกรองข้อความ</div>
                                        <div class="setting-description">
                                            ทดสอบการกรองข้อความกับข้อความตัวอย่าง
                                        </div>
                                        <div class="row">
                                            <div class="col-md-8">
                                                <textarea class="form-control" id="testMessage" rows="3" 
                                                          placeholder="ใส่ข้อความที่ต้องการทดสอบการกรอง"></textarea>
                                            </div>
                                            <div class="col-md-4">
                                                <button type="button" class="btn btn-outline-primary w-100 h-100" onclick="testFiltering()">
                                                    <i class="fas fa-eye me-2"></i>ทดสอบการกรอง
                                                </button>
                                            </div>
                                        </div>
                                        <div id="testResult" class="mt-3 p-3 bg-light rounded" style="display: none;"></div>
                                    </div>

                                    <button type="submit" class="btn btn-save text-white">
                                        <i class="fas fa-save me-2"></i>
                                        บันทึกการตั้งค่าการกรอง
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Add/Edit Line Bot Modal -->
    <div class="modal fade" id="addLineBotModal" tabindex="-1" aria-labelledby="addLineBotModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addLineBotModalLabel">
                        <i class="fab fa-line me-2"></i>เพิ่ม Line Bot ใหม่
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="lineBotForm">
                        <input type="hidden" id="lineBotId" name="id">
                        
                        <div class="mb-3">
                            <label for="lineBotName" class="form-label">ชื่อ Line Bot <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="lineBotName" name="name" 
                                   placeholder="เช่น: ฝ่ายขาย, ฝ่ายบริการลูกค้า, ฝ่ายเทคนิค" required>
                            <div class="form-text">ชื่อที่แสดงในระบบและใช้เรียก Line Bot นี้</div>
                        </div>

                        <div class="mb-3">
                            <label for="lineBotDescription" class="form-label">คำอธิบาย</label>
                            <textarea class="form-control" id="lineBotDescription" name="description" rows="2"
                                      placeholder="อธิบายหน้าที่หรือวัตถุประสงค์ของ Line Bot นี้"></textarea>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="lineChannelAccessToken" class="form-label">Channel Access Token <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" id="lineChannelAccessToken" name="channelAccessToken" 
                                           placeholder="U1234567890abcdef..." required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="lineChannelSecret" class="form-label">Channel Secret <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" id="lineChannelSecret" name="channelSecret" 
                                           placeholder="abcdef123456..." required>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="lineWebhookUrl" class="form-label">Webhook URL</label>
                                    <input type="text" class="form-control" id="lineWebhookUrl" name="webhookUrl" 
                                           placeholder="https://yourdomain.com/webhook/line1" readonly>
                                    <div class="form-text">URL ที่จะใช้เป็น Webhook สำหรับ Line Bot นี้</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="lineBotStatus" class="form-label">สถานะ</label>
                                    <select class="form-select" id="lineBotStatus" name="status">
                                        <option value="active">เปิดใช้งาน</option>
                                        <option value="inactive">ปิดใช้งาน</option>
                                        <option value="maintenance">บำรุงรักษา</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="lineBotAiModel" class="form-label">AI Model <span class="text-danger">*</span></label>
                                    <select class="form-select" id="lineBotAiModel" name="aiModel" required>
                                        <option value="gpt-5">GPT-5</option>
                                        <option value="gpt-5-mini">GPT-5 Mini</option>
                                        <option value="gpt-5-chat-latest">GPT-5 Chat Latest</option>
                                        <option value="gpt-5-nano">GPT-5 Nano</option>
                                        <option value="gpt-4.1">GPT-4.1</option>
                                        <option value="gpt-4.1-mini">GPT-4.1 Mini</option>
                                        <option value="o3">O3</option>
                                    </select>
                                    <div class="form-text">เลือก AI Model ที่จะใช้สำหรับ Line Bot นี้</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="lineBotDefault" name="isDefault">
                                        <label class="form-check-label" for="lineBotDefault">
                                            ตั้งเป็น Line Bot หลัก (Default)
                                        </label>
                                    </div>
                                    <div class="form-text">Line Bot หลักจะถูกใช้เมื่อไม่ระบุ Line Bot เฉพาะ</div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ยกเลิก</button>
                    <button type="button" class="btn btn-primary" id="saveLineBotBtn">
                        <i class="fas fa-save me-2"></i>บันทึก
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Manage Instructions Modal -->
    <div class="modal fade" id="manageInstructionsModal" tabindex="-1" aria-labelledby="manageInstructionsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="manageInstructionsModalLabel">
                        <i class="fas fa-book me-2"></i>จัดการ Instructions สำหรับ Line Bot
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h6><i class="fas fa-list me-2"></i>คลัง Instructions ที่มีอยู่</h6>
                            <div id="instructionLibraries" class="border rounded p-3" style="max-height: 400px; overflow-y: auto;">
                                <!-- รายการคลัง instructions จะถูกโหลดที่นี่ -->
                            </div>
                        </div>
                        <div class="col-md-6">
                            <h6><i class="fas fa-check-circle me-2"></i>Instructions ที่เลือกใช้</h6>
                            <div id="selectedInstructions" class="border rounded p-3" style="max-height: 400px; overflow-y: auto;">
                                <!-- รายการ instructions ที่เลือกจะแสดงที่นี่ -->
                            </div>
                        </div>
                    </div>
                    
                    <div class="mt-3">
                        <h6><i class="fas fa-info-circle me-2"></i>คำแนะนำ</h6>
                        <ul class="text-muted small">
                            <li>คลิกที่คลัง instruction เพื่อดูรายละเอียด</li>
                            <li>เลือก instruction ที่ต้องการใช้ใน Line Bot นี้</li>
                            <li>สามารถเปลี่ยนการเลือกใช้ได้ตลอดเวลา</li>
                            <li>การเปลี่ยนแปลงจะมีผลทันทีหลังจากบันทึก</li>
                        </ul>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ยกเลิก</button>
                    <button type="button" class="btn btn-primary" id="saveInstructionsBtn">
                        <i class="fas fa-save me-2"></i>บันทึกการเลือกใช้
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Global variables
        let currentSettings = {};

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            loadSettings();
            loadLineBotSettings();
            setupEventListeners();
        });

        // Setup event listeners
        function setupEventListeners() {
            // Line Bot management
            document.querySelector('[data-bs-target="#addLineBotModal"]').addEventListener('click', addNewLineBot);
            document.getElementById('saveLineBotBtn').addEventListener('click', saveLineBot);
            document.getElementById('saveInstructionsBtn').addEventListener('click', saveSelectedInstructions);

            // Chat settings form
            document.getElementById('chatSettingsForm').addEventListener('submit', function(e) {
                e.preventDefault();
                saveChatSettings();
            });

            // AI settings form
            document.getElementById('aiSettingsForm').addEventListener('submit', function(e) {
                e.preventDefault();
                saveAISettings();
            });

            // System settings form
            document.getElementById('systemSettingsForm').addEventListener('submit', function(e) {
                e.preventDefault();
                saveSystemSettings();
            });

            // Filter settings form
            document.getElementById('filterSettingsForm').addEventListener('submit', function(e) {
                e.preventDefault();
                saveFilterSettings();
            });

            // Real-time updates for chat delay and queue settings
            document.getElementById('chatDelaySeconds').addEventListener('input', function(e) {
                document.getElementById('currentChatDelay').textContent = e.target.value;
            });

            document.getElementById('maxQueueMessages').addEventListener('input', function(e) {
                document.getElementById('currentMaxQueue').textContent = e.target.value;
            });

            // Tab change event
            document.querySelectorAll('[data-bs-toggle="tab"]').forEach(tab => {
                tab.addEventListener('shown.bs.tab', function(e) {
                    // Refresh settings when tab changes
                    loadSettings();
                });
            });
        }

        // Load current settings
        async function loadSettings() {
            try {
                const response = await fetch('/api/settings');
                if (response.ok) {
                    currentSettings = await response.json();
                    populateSettings();
                } else {
                    showAlert('ไม่สามารถโหลดการตั้งค่าได้', 'danger');
                }
                
                // โหลดข้อมูล AI Model ของ Line Bot
                await loadLineBotAiModelInfo();
                
                // โหลดข้อมูลภาพรวมระบบ
                await loadOverviewData();
            } catch (error) {
                console.error('Error loading settings:', error);
                showAlert('เกิดข้อผิดพลาดในการโหลดการตั้งค่า', 'danger');
            }
        }

        // Populate settings in form
        function populateSettings() {
            // Chat settings
            if (currentSettings.chatDelaySeconds !== undefined) {
                document.getElementById('chatDelaySeconds').value = currentSettings.chatDelaySeconds;
                document.getElementById('currentChatDelay').textContent = currentSettings.chatDelaySeconds;
            } else {
                document.getElementById('chatDelaySeconds').value = 5; // ค่าเริ่มต้น
                document.getElementById('currentChatDelay').textContent = 5; // ค่าเริ่มต้น
            }
            if (currentSettings.maxQueueMessages !== undefined) {
                document.getElementById('maxQueueMessages').value = currentSettings.maxQueueMessages;
                document.getElementById('currentMaxQueue').textContent = currentSettings.maxQueueMessages;
            } else {
                document.getElementById('maxQueueMessages').value = 10; // ค่าเริ่มต้น
                document.getElementById('currentMaxQueue').textContent = 10; // ค่าเริ่มต้น
            }
            if (currentSettings.enableMessageMerging !== undefined) {
                document.getElementById('enableMessageMerging').checked = currentSettings.enableMessageMerging;
            } else {
                document.getElementById('enableMessageMerging').checked = true; // ค่าเริ่มต้น
            }

            // AI settings
            if (currentSettings.textModel) {
                document.getElementById('textModel').value = currentSettings.textModel;
            } else {
                document.getElementById('textModel').value = 'gpt-5'; // ค่าเริ่มต้น
            }
            if (currentSettings.visionModel) {
                document.getElementById('visionModel').value = currentSettings.visionModel;
            } else {
                document.getElementById('visionModel').value = 'gpt-5'; // ค่าเริ่มต้น
            }

            if (currentSettings.maxImagesPerMessage !== undefined) {
                document.getElementById('maxImagesPerMessage').value = currentSettings.maxImagesPerMessage;
            } else {
                document.getElementById('maxImagesPerMessage').value = 3; // ค่าเริ่มต้น
            }

            // System settings
            if (currentSettings.aiEnabled !== undefined) {
                document.getElementById('aiEnabled').checked = currentSettings.aiEnabled;
            } else {
                document.getElementById('aiEnabled').checked = true; // ค่าเริ่มต้น
            }
            if (currentSettings.enableChatHistory !== undefined) {
                document.getElementById('enableChatHistory').checked = currentSettings.enableChatHistory;
            } else {
                document.getElementById('enableChatHistory').checked = true; // ค่าเริ่มต้น
            }
            if (currentSettings.enableAdminNotifications !== undefined) {
                document.getElementById('enableAdminNotifications').checked = currentSettings.enableAdminNotifications;
            } else {
                document.getElementById('enableAdminNotifications').checked = true; // ค่าเริ่มต้น
            }
            if (currentSettings.systemMode) {
                document.getElementById('systemMode').value = currentSettings.systemMode;
            } else {
                document.getElementById('systemMode').value = 'production'; // ค่าเริ่มต้น
            }

            // Filter settings
            if (currentSettings.enableMessageFiltering !== undefined) {
                document.getElementById('enableMessageFiltering').checked = currentSettings.enableMessageFiltering;
            } else {
                document.getElementById('enableMessageFiltering').checked = false; // ค่าเริ่มต้น
            }
            if (currentSettings.hiddenWords !== undefined) {
                document.getElementById('hiddenWords').value = currentSettings.hiddenWords;
            } else {
                document.getElementById('hiddenWords').value = ''; // ค่าเริ่มต้น
            }
            // อัปเดตจำนวนคำที่ถูกซ่อน
            updateHiddenWordsCount();
            if (currentSettings.replacementText !== undefined) {
                document.getElementById('replacementText').value = currentSettings.replacementText;
            } else {
                document.getElementById('replacementText').value = ''; // ค่าเริ่มต้น
            }
            if (currentSettings.enableStrictFiltering !== undefined) {
                document.getElementById('enableStrictFiltering').checked = currentSettings.enableStrictFiltering;
            } else {
                document.getElementById('enableStrictFiltering').checked = false; // ค่าเริ่มต้น
            }
        }
        
        // Load Line Bot AI Model information
        async function loadLineBotAiModelInfo() {
            try {
                const response = await fetch('/api/line-bots');
                if (response.ok) {
                    const lineBots = await response.json();
                    displayLineBotAiModelInfo(lineBots);
                }
            } catch (error) {
                console.error('Error loading line bot AI model info:', error);
            }
        }
        
        // Display Line Bot AI Model information
        function displayLineBotAiModelInfo(lineBots) {
            const container = document.getElementById('lineBotAiModelInfo');
            
            if (!lineBots || lineBots.length === 0) {
                container.innerHTML = '<p class="text-muted mb-0">ยังไม่มี Line Bot ในระบบ</p>';
                return;
            }
            
            let html = '<div class="row">';
            lineBots.forEach(bot => {
                const modelName = bot.aiModel || 'gpt-5';
                const statusClass = bot.status === 'active' ? 'success' : 'warning';
                
                html += `
                    <div class="col-md-6 mb-2">
                        <div class="d-flex align-items-center">
                            <span class="badge bg-${statusClass} me-2">${bot.status === 'active' ? 'เปิดใช้งาน' : 'ปิดใช้งาน'}</span>
                            <strong>${bot.name}:</strong>
                            <span class="badge bg-info ms-2">${modelName}</span>
                        </div>
                    </div>
                `;
            });
            html += '</div>';
            
            container.innerHTML = html;
        }

        // Save chat settings
        async function saveChatSettings() {
            const settings = {
                chatDelaySeconds: parseInt(document.getElementById('chatDelaySeconds').value),
                maxQueueMessages: parseInt(document.getElementById('maxQueueMessages').value),
                enableMessageMerging: document.getElementById('enableMessageMerging').checked
            };

            try {
                const response = await fetch('/api/settings/chat', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(settings)
                });

                if (response.ok) {
                    showAlert('บันทึกการตั้งค่าแชทเรียบร้อยแล้ว', 'success');
                    await loadSettings(); // Reload settings
                } else {
                    showAlert('ไม่สามารถบันทึกการตั้งค่าแชทได้', 'danger');
                }
            } catch (error) {
                console.error('Error saving chat settings:', error);
                showAlert('เกิดข้อผิดพลาดในการบันทึกการตั้งค่า', 'danger');
            }
        }

        // Save AI settings
        async function saveAISettings() {
            const settings = {
                textModel: document.getElementById('textModel').value,
                visionModel: document.getElementById('visionModel').value,
                maxImagesPerMessage: parseInt(document.getElementById('maxImagesPerMessage').value)
            };

            try {
                const response = await fetch('/api/settings/ai', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(settings)
                });

                if (response.ok) {
                    showAlert('บันทึกการตั้งค่า AI เรียบร้อยแล้ว', 'success');
                    await loadSettings(); // Reload settings
                } else {
                    showAlert('ไม่สามารถบันทึกการตั้งค่า AI ได้', 'danger');
                }
            } catch (error) {
                console.error('Error saving AI settings:', error);
                showAlert('เกิดข้อผิดพลาดในการบันทึกการตั้งค่า', 'danger');
            }
        }

        // Save system settings
        async function saveSystemSettings() {
            const settings = {
                aiEnabled: document.getElementById('aiEnabled').checked,
                enableChatHistory: document.getElementById('enableChatHistory').checked,
                enableAdminNotifications: document.getElementById('enableAdminNotifications').checked,
                systemMode: document.getElementById('systemMode').value
            };

            try {
                const response = await fetch('/api/settings/system', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(settings)
                });

                if (response.ok) {
                    showAlert('บันทึกการตั้งค่าระบบเรียบร้อยแล้ว', 'success');
                    await loadSettings(); // Reload settings
                } else {
                    showAlert('ไม่สามารถบันทึกการตั้งค่าระบบได้', 'danger');
                }
            } catch (error) {
                console.error('Error saving system settings:', error);
                showAlert('เกิดข้อผิดพลาดในการบันทึกการตั้งค่า', 'danger');
            }
        }

        // Save filter settings
        async function saveFilterSettings() {
            const settings = {
                enableMessageFiltering: document.getElementById('enableMessageFiltering').checked,
                hiddenWords: document.getElementById('hiddenWords').value,
                replacementText: document.getElementById('replacementText').value || '[ข้อความถูกซ่อน]',
                enableStrictFiltering: document.getElementById('enableStrictFiltering').checked
            };

            try {
                const response = await fetch('/api/settings/filter', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(settings)
                });

                if (response.ok) {
                    showAlert('บันทึกการตั้งค่าการกรองเรียบร้อยแล้ว', 'success');
                    await loadSettings(); // Reload settings
                } else {
                    showAlert('ไม่สามารถบันทึกการตั้งค่าการกรองได้', 'danger');
                }
            } catch (error) {
                console.error('Error saving filter settings:', error);
                showAlert('เกิดข้อผิดพลาดในการบันทึกการตั้งค่า', 'danger');
            }
        }

        // Test filtering function
        async function testFiltering() {
            const testMessage = document.getElementById('testMessage').value;
            if (!testMessage.trim()) {
                showAlert('กรุณาใส่ข้อความที่ต้องการทดสอบ', 'warning');
                return;
            }

            try {
                const response = await fetch('/api/filter/test', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ message: testMessage })
                });

                if (response.ok) {
                    const result = await response.json();
                    const testResult = document.getElementById('testResult');
                    testResult.innerHTML = `
                        <strong>ผลการทดสอบ:</strong><br>
                        <strong>ข้อความต้นฉบับ:</strong> ${testMessage}<br>
                        <strong>ข้อความหลังกรอง:</strong> ${result.filteredMessage}<br>
                        <strong>คำที่ถูกซ่อน:</strong> ${result.hiddenWords.length > 0 ? result.hiddenWords.join(', ') : 'ไม่มี'}
                    `;
                    testResult.style.display = 'block';
                } else {
                    showAlert('ไม่สามารถทดสอบการกรองได้', 'danger');
                }
            } catch (error) {
                console.error('Error testing filter:', error);
                showAlert('เกิดข้อผิดพลาดในการทดสอบการกรอง', 'danger');
            }
        }

        // Load Line Bot settings
        async function loadLineBotSettings() {
            try {
                const response = await fetch('/api/line-bots');
                if (response.ok) {
                    const lineBots = await response.json();
                    displayLineBotList(lineBots);
                    
                    // อัปเดตข้อมูล AI Model ในส่วนการตั้งค่า AI (ถ้ามี)
                    const lineBotAiModelInfo = document.getElementById('lineBotAiModelInfo');
                    if (lineBotAiModelInfo) {
                        displayLineBotAiModelInfo(lineBots);
                    }
                } else {
                    showAlert('ไม่สามารถโหลดข้อมูล Line Bot ได้', 'danger');
                }
            } catch (error) {
                console.error('Error loading line bot settings:', error);
                showAlert('เกิดข้อผิดพลาดในการโหลดข้อมูล Line Bot', 'danger');
            }
        }

        // Display Line Bot list
        function displayLineBotList(lineBots) {
            const container = document.getElementById('lineBotList');
            
            // อัปเดตสถิติ
            updateLineBotStats(lineBots);
            
            if (!lineBots || lineBots.length === 0) {
                container.innerHTML = `
                    <div class="text-center py-5">
                        <i class="fab fa-line fa-4x text-muted mb-3"></i>
                        <h5 class="text-muted">ยังไม่มี Line Bot ในระบบ</h5>
                        <p class="text-muted">เริ่มต้นด้วยการเพิ่ม Line Bot ใหม่</p>
                        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addLineBotModal">
                            <i class="fas fa-plus me-2"></i>เพิ่ม Line Bot ใหม่
                        </button>
                    </div>
                `;
                return;
            }

            let html = '';
            lineBots.forEach((bot, index) => {
                const statusClass = bot.status === 'active' ? 'success' : bot.status === 'maintenance' ? 'warning' : 'secondary';
                const statusText = bot.status === 'active' ? 'เปิดใช้งาน' : bot.status === 'maintenance' ? 'บำรุงรักษา' : 'ปิดใช้งาน';
                const defaultBadge = bot.isDefault ? '<span class="badge bg-primary ms-2">หลัก</span>' : '';
                const instructionsCount = bot.selectedInstructions ? bot.selectedInstructions.length : 0;
                
                html += `
                    <div class="card mb-3 border-0 shadow-sm">
                        <div class="card-header bg-white border-bottom">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="mb-0">
                                        <i class="fab fa-line me-2 text-success"></i>
                                        ${bot.name} ${defaultBadge}
                                    </h6>
                                    <small class="text-muted">${bot.description || 'ไม่มีคำอธิบาย'}</small>
                                </div>
                                <div class="d-flex align-items-center gap-2">
                                    <span class="badge bg-${statusClass}">${statusText}</span>
                                    <div class="dropdown">
                                        <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </button>
                                        <ul class="dropdown-menu">
                                            <li><a class="dropdown-item" href="#" onclick="editLineBot('${bot._id}')">
                                                <i class="fas fa-edit me-2"></i>แก้ไข
                                            </a></li>
                                            <li><a class="dropdown-item" href="#" onclick="manageInstructions('${bot._id}')">
                                                <i class="fas fa-book me-2"></i>จัดการ Instructions
                                            </a></li>
                                            <li><a class="dropdown-item" href="#" onclick="testLineBot('${bot._id}')">
                                                <i class="fas fa-test-tube me-2"></i>ทดสอบ
                                            </a></li>
                                            <li><hr class="dropdown-divider"></li>
                                            <li><a class="dropdown-item text-danger" href="#" onclick="deleteLineBot('${bot._id}')">
                                                <i class="fas fa-trash me-2"></i>ลบ
                                            </a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="d-flex align-items-center mb-2">
                                        <i class="fas fa-robot text-primary me-2"></i>
                                        <div>
                                            <small class="text-muted d-block">AI Model</small>
                                            <span class="badge bg-info">${bot.aiModel || 'gpt-5'}</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="d-flex align-items-center mb-2">
                                        <i class="fas fa-book text-info me-2"></i>
                                        <div>
                                            <small class="text-muted d-block">Instructions</small>
                                            <span class="badge bg-secondary">${instructionsCount} รายการ</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="d-flex align-items-center mb-2">
                                        <i class="fas fa-link text-warning me-2"></i>
                                        <div>
                                            <small class="text-muted d-block">Webhook</small>
                                            <small class="text-truncate d-block" style="max-width: 150px;" title="${bot.webhookUrl || 'ไม่ระบุ'}">
                                                ${bot.webhookUrl ? bot.webhookUrl.split('/').pop() : 'ไม่ระบุ'}
                                            </small>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="d-flex align-items-center mb-2">
                                        <i class="fas fa-clock text-muted me-2"></i>
                                        <div>
                                            <small class="text-muted d-block">อัปเดตล่าสุด</small>
                                            <small>${new Date(bot.updatedAt).toLocaleDateString('th-TH')}</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            });
            container.innerHTML = html;
        }
        
        // Update Line Bot statistics
        function updateLineBotStats(lineBots) {
            const total = lineBots.length;
            const active = lineBots.filter(bot => bot.status === 'active').length;
            const configured = lineBots.filter(bot => bot.aiModel && bot.selectedInstructions && bot.selectedInstructions.length > 0).length;
            const inactive = total - active;
            
            document.getElementById('totalBots').textContent = total;
            document.getElementById('activeBots').textContent = active;
            document.getElementById('configuredBots').textContent = configured;
            document.getElementById('inactiveBots').textContent = inactive;
        }
        
        // Refresh Line Bot list
        function refreshLineBotList() {
            loadLineBotSettings();
            showAlert('รีเฟรชข้อมูลเรียบร้อยแล้ว', 'success');
        }
        
        // Load overview data
        async function loadOverviewData() {
            try {
                // โหลดข้อมูล Line Bot
                const lineBotResponse = await fetch('/api/line-bots');
                if (lineBotResponse.ok) {
                    const lineBots = await lineBotResponse.json();
                    displayLineBotOverview(lineBots);
                }
                
                // โหลดข้อมูล AI Models
                displayAiModelOverview();
                
                // โหลดข้อมูล Instructions
                const instructionsResponse = await fetch('/api/instructions/library');
                if (instructionsResponse.ok) {
                    const result = await instructionsResponse.json();
                    displayInstructionsOverview(result.libraries || []);
                }
                
                // โหลดข้อมูลความปลอดภัย
                displaySecurityOverview();
                
            } catch (error) {
                console.error('Error loading overview data:', error);
            }
        }
        
        // Display Line Bot overview
        function displayLineBotOverview(lineBots) {
            const container = document.getElementById('lineBotOverview');
            const total = lineBots.length;
            const active = lineBots.filter(bot => bot.status === 'active').length;
            
            if (total === 0) {
                container.innerHTML = '<p class="text-muted mb-0">ยังไม่มี Line Bot</p>';
                return;
            }
            
            container.innerHTML = `
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h4 class="mb-0">${total}</h4>
                        <small>Bot ทั้งหมด</small>
                    </div>
                    <div class="text-end">
                        <h6 class="mb-0 text-success">${active}</h6>
                        <small>Bot ที่ใช้งาน</small>
                    </div>
                </div>
            `;
        }
        
        // Display AI Model overview
        function displayAiModelOverview() {
            const container = document.getElementById('aiModelOverview');
            container.innerHTML = `
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h4 class="mb-0">7</h4>
                        <small>Models ที่รองรับ</small>
                    </div>
                    <div class="text-end">
                        <h6 class="mb-0 text-primary">GPT-5</h6>
                        <small>Model หลัก</small>
                    </div>
                </div>
            `;
        }
        
        // Display Instructions overview
        function displayInstructionsOverview(libraries) {
            const container = document.getElementById('instructionsOverview');
            const total = libraries.length;
            
            if (total === 0) {
                container.innerHTML = '<p class="text-muted mb-0">ยังไม่มี Instructions</p>';
                return;
            }
            
            container.innerHTML = `
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h4 class="mb-0">${total}</h4>
                        <small>คลัง Instructions</small>
                    </div>
                    <div class="text-end">
                        <h6 class="mb-0 text-info">พร้อมใช้งาน</h6>
                        <small>เลือกใช้ได้ทันที</small>
                    </div>
                </div>
            `;
            
            // อัปเดตจำนวน Instructions ในแท็บ AI
            const instructionsCountElement = document.getElementById('instructionsCount');
            if (instructionsCountElement) {
                instructionsCountElement.textContent = total;
            }
        }
        
        // Display Security overview
        function displaySecurityOverview() {
            const container = document.getElementById('securityOverview');
            container.innerHTML = `
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h4 class="mb-0">3</h4>
                        <small>ฟีเจอร์ความปลอดภัย</small>
                    </div>
                    <div class="text-end">
                        <h6 class="mb-0 text-warning">เปิดใช้งาน</h6>
                        <small>ระบบป้องกัน</small>
                    </div>
                </div>
            `;
        }
        
        // Update hidden words count
        function updateHiddenWordsCount() {
            const hiddenWordsText = document.getElementById('hiddenWords').value;
            const words = hiddenWordsText.split('\n').filter(word => word.trim() !== '');
            document.getElementById('hiddenWordsCount').textContent = words.length;
        }
        
        // Add event listener for hidden words textarea
        document.addEventListener('DOMContentLoaded', function() {
            const hiddenWordsTextarea = document.getElementById('hiddenWords');
            if (hiddenWordsTextarea) {
                hiddenWordsTextarea.addEventListener('input', updateHiddenWordsCount);
            }
        });

        // Add new Line Bot
        function addNewLineBot() {
            document.getElementById('lineBotForm').reset();
            document.getElementById('lineBotId').value = '';
            document.getElementById('addLineBotModalLabel').innerHTML = '<i class="fab fa-line me-2"></i>เพิ่ม Line Bot ใหม่';
            document.getElementById('saveLineBotBtn').innerHTML = '<i class="fas fa-save me-2"></i>บันทึก';
            
            // Generate webhook URL
            const baseUrl = window.location.origin;
            document.getElementById('lineWebhookUrl').value = `${baseUrl}/webhook/line/new`;
        }

        // Edit Line Bot
        async function editLineBot(botId) {
            try {
                const response = await fetch(`/api/line-bots/${botId}`);
                if (response.ok) {
                    const bot = await response.json();
                    
                    document.getElementById('lineBotId').value = bot._id;
                    document.getElementById('lineBotName').value = bot.name;
                    document.getElementById('lineBotDescription').value = bot.description || '';
                    document.getElementById('lineChannelAccessToken').value = bot.channelAccessToken;
                    document.getElementById('lineChannelSecret').value = bot.channelSecret;
                    document.getElementById('lineWebhookUrl').value = bot.webhookUrl || '';
                    document.getElementById('lineBotStatus').value = bot.status;
                    document.getElementById('lineBotAiModel').value = bot.aiModel || 'gpt-5';
                    document.getElementById('lineBotDefault').checked = bot.isDefault;
                    
                    document.getElementById('addLineBotModalLabel').innerHTML = '<i class="fab fa-line me-2"></i>แก้ไข Line Bot';
                    document.getElementById('saveLineBotBtn').innerHTML = '<i class="fas fa-save me-2"></i>อัปเดต';
                    
                    const modal = new bootstrap.Modal(document.getElementById('addLineBotModal'));
                    modal.show();
                } else {
                    showAlert('ไม่สามารถโหลดข้อมูล Line Bot ได้', 'danger');
                }
            } catch (error) {
                console.error('Error loading line bot:', error);
                showAlert('เกิดข้อผิดพลาดในการโหลดข้อมูล Line Bot', 'danger');
            }
        }

        // Delete Line Bot
        async function deleteLineBot(botId) {
            if (!confirm('คุณแน่ใจหรือไม่ที่จะลบ Line Bot นี้?')) {
                return;
            }

            try {
                const response = await fetch(`/api/line-bots/${botId}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    showAlert('ลบ Line Bot เรียบร้อยแล้ว', 'success');
                    await loadLineBotSettings();
                } else {
                    showAlert('ไม่สามารถลบ Line Bot ได้', 'danger');
                }
            } catch (error) {
                console.error('Error deleting line bot:', error);
                showAlert('เกิดข้อผิดพลาดในการลบ Line Bot', 'danger');
            }
        }

        // Test Line Bot
        async function testLineBot(botId) {
            try {
                const response = await fetch(`/api/line-bots/${botId}/test`, {
                    method: 'POST'
                });

                if (response.ok) {
                    const result = await response.json();
                    showAlert(`ทดสอบ Line Bot สำเร็จ: ${result.message}`, 'success');
                } else {
                    showAlert('ไม่สามารถทดสอบ Line Bot ได้', 'danger');
                }
            } catch (error) {
                console.error('Error testing line bot:', error);
                showAlert('เกิดข้อผิดพลาดในการทดสอบ Line Bot', 'danger');
            }
        }

        // Save Line Bot
        async function saveLineBot() {
            const form = document.getElementById('lineBotForm');
            const formData = new FormData(form);
            
            const botData = {
                name: formData.get('name'),
                description: formData.get('description'),
                channelAccessToken: formData.get('channelAccessToken'),
                channelSecret: formData.get('channelSecret'),
                webhookUrl: formData.get('webhookUrl'),
                status: formData.get('status'),
                aiModel: formData.get('aiModel'),
                isDefault: formData.get('isDefault') === 'on'
            };

            const botId = formData.get('id');
            const url = botId ? `/api/line-bots/${botId}` : '/api/line-bots';
            const method = botId ? 'PUT' : 'POST';

            try {
                const response = await fetch(url, {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(botData)
                });

                if (response.ok) {
                    showAlert(botId ? 'อัปเดต Line Bot เรียบร้อยแล้ว' : 'เพิ่ม Line Bot เรียบร้อยแล้ว', 'success');
                    await loadLineBotSettings();
                    
                    const modal = bootstrap.Modal.getInstance(document.getElementById('addLineBotModal'));
                    modal.hide();
                } else {
                    showAlert('ไม่สามารถบันทึก Line Bot ได้', 'danger');
                }
            } catch (error) {
                console.error('Error saving line bot:', error);
                showAlert('เกิดข้อผิดพลาดในการบันทึก Line Bot', 'danger');
            }
        }

        // Global variables for instruction management
        let currentLineBotId = null;
        let currentLineBotInstructions = [];
        let availableLibraries = [];

        // Manage Instructions for Line Bot
        async function manageInstructions(botId) {
            currentLineBotId = botId;
            currentLineBotInstructions = [];
            
            try {
                // Load Line Bot details
                const botResponse = await fetch(`/api/line-bots/${botId}`);
                if (botResponse.ok) {
                    const bot = await botResponse.json();
                    currentLineBotInstructions = bot.selectedInstructions || [];
                }
                
                // Load available instruction libraries
                const libraryResponse = await fetch('/api/instructions/library');
                if (libraryResponse.ok) {
                    const result = await libraryResponse.json();
                    availableLibraries = result.libraries || [];
                }
                
                // Display data
                displayInstructionLibraries();
                displaySelectedInstructions();
                
                // Show modal
                const modal = new bootstrap.Modal(document.getElementById('manageInstructionsModal'));
                modal.show();
                
            } catch (error) {
                console.error('Error loading instruction data:', error);
                showAlert('เกิดข้อผิดพลาดในการโหลดข้อมูล instructions', 'danger');
            }
        }

        // Display available instruction libraries
        function displayInstructionLibraries() {
            const container = document.getElementById('instructionLibraries');
            
            if (!availableLibraries || availableLibraries.length === 0) {
                container.innerHTML = `
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-2"></i>
                        ยังไม่มีคลัง instructions ในระบบ
                    </div>
                `;
                return;
            }

            let html = '';
            availableLibraries.forEach(library => {
                const isSelected = currentLineBotInstructions.includes(library.date);
                const selectedClass = isSelected ? 'border-success bg-light' : 'border-secondary';
                const selectedIcon = isSelected ? '<i class="fas fa-check-circle text-success me-2"></i>' : '<i class="fas fa-circle text-muted me-2"></i>';
                
                html += `
                    <div class="card mb-2 ${selectedClass} library-item" data-date="${library.date}" style="cursor: pointer;">
                        <div class="card-body p-2">
                            <div class="d-flex justify-content-between align-items-start">
                                <div>
                                    ${selectedIcon}
                                    <strong>${library.name || library.displayDate}</strong>
                                    <br>
                                    <small class="text-muted">${library.description || 'ไม่มีคำอธิบาย'}</small>
                                    <br>
                                    <small class="text-muted">
                                        <i class="fas fa-calendar me-1"></i>${library.displayDate} 
                                        <i class="fas fa-clock me-1 ms-2"></i>${library.displayTime}
                                    </small>
                                </div>
                                <div class="text-end">
                                    <small class="badge bg-${library.type === 'auto' ? 'primary' : 'success'}">${library.type === 'auto' ? 'อัตโนมัติ' : 'ด้วยตนเอง'}</small>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            });
            
            container.innerHTML = html;
            
            // Add click events
            document.querySelectorAll('.library-item').forEach(item => {
                item.addEventListener('click', function() {
                    const date = this.dataset.date;
                    toggleLibrarySelection(date);
                });
            });
        }

        // Display selected instructions
        function displaySelectedInstructions() {
            const container = document.getElementById('selectedInstructions');
            
            if (currentLineBotInstructions.length === 0) {
                container.innerHTML = `
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        ยังไม่ได้เลือก instructions จากคลัง
                    </div>
                `;
                return;
            }

            let html = '<div class="mb-2"><strong>คลังที่เลือกใช้:</strong></div>';
            currentLineBotInstructions.forEach(date => {
                const library = availableLibraries.find(lib => lib.date === date);
                if (library) {
                    html += `
                        <div class="card mb-2 border-success bg-light">
                            <div class="card-body p-2">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div>
                                        <i class="fas fa-check-circle text-success me-2"></i>
                                        <strong>${library.name || library.displayDate}</strong>
                                        <br>
                                        <small class="text-muted">${library.description || 'ไม่มีคำอธิบาย'}</small>
                                    </div>
                                    <button class="btn btn-sm btn-outline-danger" onclick="removeLibrarySelection('${date}')">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    `;
                }
            });
            
            container.innerHTML = html;
        }

        // Toggle library selection
        function toggleLibrarySelection(date) {
            const index = currentLineBotInstructions.indexOf(date);
            if (index > -1) {
                // Remove if already selected
                currentLineBotInstructions.splice(index, 1);
            } else {
                // Add if not selected
                currentLineBotInstructions.push(date);
            }
            
            // Refresh display
            displayInstructionLibraries();
            displaySelectedInstructions();
        }

        // Remove library selection
        function removeLibrarySelection(date) {
            const index = currentLineBotInstructions.indexOf(date);
            if (index > -1) {
                currentLineBotInstructions.splice(index, 1);
                displayInstructionLibraries();
                displaySelectedInstructions();
            }
        }

        // Save selected instructions
        async function saveSelectedInstructions() {
            if (!currentLineBotId) {
                showAlert('ไม่พบ Line Bot ID', 'danger');
                return;
            }

            try {
                const response = await fetch(`/api/line-bots/${currentLineBotId}/instructions`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        selectedInstructions: currentLineBotInstructions
                    })
                });

                if (response.ok) {
                    showAlert('บันทึกการเลือกใช้ instructions เรียบร้อยแล้ว', 'success');
                    
                    // Refresh Line Bot list
                    await loadLineBotSettings();
                    
                    // Close modal
                    const modal = bootstrap.Modal.getInstance(document.getElementById('manageInstructionsModal'));
                    modal.hide();
                } else {
                    showAlert('ไม่สามารถบันทึกการเลือกใช้ instructions ได้', 'danger');
                }
            } catch (error) {
                console.error('Error saving instructions:', error);
                showAlert('เกิดข้อผิดพลาดในการบันทึกการเลือกใช้ instructions', 'danger');
            }
        }

        // Show alert message
        function showAlert(message, type) {
            const alertContainer = document.getElementById('alertContainer');
            const alertId = 'alert-' + Date.now();
            
            const alertHtml = `
                <div class="alert alert-${type} alert-custom alert-dismissible fade show" id="${alertId}" role="alert">
                    <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'danger' ? 'exclamation-triangle' : 'info-circle'} me-2"></i>
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;
            
            alertContainer.innerHTML = alertHtml;
            
            // Auto-hide after 5 seconds
            setTimeout(() => {
                const alert = document.getElementById(alertId);
                if (alert) {
                    alert.remove();
                }
            }, 5000);
        }
    </script>
</body>
</html>
